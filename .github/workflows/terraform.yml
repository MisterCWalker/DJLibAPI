name: 'Terraform CI/CD'

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
  pull_request:
    paths:
      - 'terraform/**'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TF_LOG: ERROR
  BUCKET_TF_STATE: ${{ secrets.AWS_S3_BUCKET}}

jobs:

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Read .terrafrom-version file
    - name: Read .terraform-version
      id: read-tf-version
      run: echo "version=$(cat .terraform-version)" >> $GITHUB_OUTPUT

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ steps.read-tf-version.outputs.version }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.OIDC_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Run AWS CLI command to get Security Token Service
      run: aws sts get-caller-identity

    - name: Terraform Init
      run: |
        terraform init \
        -backend-config="bucket=${{ secrets.AWS_S3_BUCKET }}" \
        -backend-config="key=terraform.tfstate" \
        -backend-config="region=${{ secrets.AWS_REGION }}" \
        -no-color

    - name: Terraform format
      id: fmt
      run: terraform fmt -check -no-color

    - name: Terraform Validate
      run: terraform validate -no-color

    - name: Terraform Plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color -var aws_account_id="${{ secrets.AWS_ACCOUNT_ID }}"
      continue-on-error: true

    - name: Terraform Apply
      if: github.event_name == 'push'
      run: terraform apply -no-color -auto-approve -var aws_account_id="${{ secrets.AWS_ACCOUNT_ID }}"
